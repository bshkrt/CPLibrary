template<typename T>
struct Fenwick {
    vector<T> t;
    int sz;

    void init(int n) {
        t.assign(n, 0);
        sz = n;
    }

    Fenwick() = default;
    Fenwick(int n) {
        init(n);
    }

    void modify(int i, T v) {
        for (; i > -1; i =  ((i + 1) & i) - 1) {
            t[i] += v;
        }
    }

    T get(int i) {
        T ans = 0;
        for (; i < sz; i |= (i + 1)) {
            ans += t[i];
        }
        return ans;
    }

    //[l, r)
    T get(int l, int r) {
        return get(l) - get(r);
    }
    //[l, r)
    void modify(int l, int r, T v) {
        modify(l - 1, -v);
        modify(r - 1, v);
    }

};

//SUFFIX!!!